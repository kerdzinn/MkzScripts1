-- Mkz Loading (Completo: force-to-front + barra animada)
-- Cole em um executor (KRNL / Delta / Synapse etc.)

local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local plr = Players.LocalPlayer
if not plr then return end
local playerGui = plr:WaitForChild("PlayerGui")

-- === cria a GUI Mkz ===
local gui = Instance.new("ScreenGui")
gui.Name = "MkzLoad_Executor"
gui.IgnoreGuiInset = true
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.DisplayOrder = 9999

-- fundo
local bg = Instance.new("Frame")
bg.Size = UDim2.new(1,0,1,0)
bg.BackgroundColor3 = Color3.fromRGB(10,10,12)
bg.Parent = gui
bg.ZIndex = 99999

-- título
local title = Instance.new("TextLabel")
title.Size = UDim2.new(0.3,0,0.08,0)
title.Position = UDim2.new(0.5,0,0.33,0)
title.AnchorPoint = Vector2.new(0.5,0.5)
title.BackgroundTransparency = 1
title.Text = "Mkz"
title.Font = Enum.Font.GothamBold
title.TextScaled = true
title.TextColor3 = Color3.fromRGB(0,160,255)
title.ZIndex = 99999
title.Parent = bg

-- barra moldura (cinza)
local barFrame = Instance.new("Frame")
barFrame.Size = UDim2.new(0.42,0,0.045,0)
barFrame.Position = UDim2.new(0.5,0,0.55,0)
barFrame.AnchorPoint = Vector2.new(0.5,0.5)
barFrame.BackgroundColor3 = Color3.fromRGB(70,70,78)
barFrame.ZIndex = 99999
barFrame.Parent = bg
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0,12)
corner.Parent = barFrame

-- barra de preenchimento (azul) - CORRIGIDO: começa visível mas com width pequeno
local fill = Instance.new("Frame")
fill.Size = UDim2.new(0.01,0,1,0) -- começa com 1% visível
fill.BackgroundColor3 = Color3.fromRGB(0,120,255)
fill.ZIndex = 100000
fill.BorderSizePixel = 0
fill.Parent = barFrame
local fillCorner = Instance.new("UICorner")
fillCorner.CornerRadius = UDim.new(0,12)
fillCorner.Parent = fill

-- texto de porcentagem
local percent = Instance.new("TextLabel")
percent.Size = UDim2.new(0.15,0,0.04,0)
percent.BackgroundTransparency = 1
percent.Position = UDim2.new(0.5,0,0.62,0)
percent.AnchorPoint = Vector2.new(0.5,0)
percent.Text = "0%"
percent.Font = Enum.Font.GothamSemibold
percent.TextScaled = true
percent.TextColor3 = Color3.fromRGB(200,200,210)
percent.ZIndex = 99999
percent.Parent = bg

-- === parenta em CoreGui ou PlayerGui ===
local parentedToCore = false
local ok, err = pcall(function()
	gui.Parent = CoreGui
end)
if ok then
	parentedToCore = true
else
	gui.Parent = playerGui
	parentedToCore = false
end

-- === esconde outras ScreenGuis ===
local hiddenFolder = Instance.new("Folder")
hiddenFolder.Name = "MkzHiddenTemp"
hiddenFolder.Parent = playerGui

local movedScreens = {}
for _,child in ipairs(playerGui:GetChildren()) do
	if child:IsA("ScreenGui") and child ~= gui and child.Name ~= "MkzHiddenTemp" then
		pcall(function()
			table.insert(movedScreens, child)
			child.Parent = hiddenFolder
		end)
	end
end

-- === desabilita CoreGui types ===
local disabledCore = {}
for _, coreType in ipairs(Enum.CoreGuiType:GetEnumItems()) do
	pcall(function()
		StarterGui:SetCoreGuiEnabled(coreType, false)
		table.insert(disabledCore, coreType)
	end)
end

-- === ANIMAÇÃO DA BARRA (smooth loading) ===
local currentProgress = 0
local targetProgress = 0
local loadingActive = true

-- função para atualizar visual da barra
local function updateBar(progress)
	local clampedProgress = math.clamp(progress, 0, 1)
	fill.Size = UDim2.new(clampedProgress, 0, 1, 0)
	percent.Text = string.format("%d%%", math.floor(clampedProgress * 100))
end

-- smooth interpolation da barra
local connection = RunService.Heartbeat:Connect(function(dt)
	if not loadingActive then return end
	
	-- interpola suavemente até o target
	local speed = 2 -- velocidade da interpolação
	currentProgress = currentProgress + (targetProgress - currentProgress) * math.min(dt * speed, 1)
	updateBar(currentProgress)
end)

-- função para definir progresso (chame externamente)
local function setProgress(value)
	targetProgress = math.clamp(value / 100, 0, 1)
end

-- simula carregamento automático (remova se for controlar manualmente)
task.spawn(function()
	for i = 0, 100, 1 do
		if not loadingActive then break end
		setProgress(i)
		task.wait(0.03) -- ajuste a velocidade aqui
	end
	
	-- ao finalizar, aguarda um pouco e limpa
	task.wait(0.5)
	restoreAll()
end)

-- === função de restauração ===
function restoreAll()
	loadingActive = false
	if connection then connection:Disconnect() end
	
	-- reabilita CoreGui
	for _, coreType in ipairs(disabledCore) do
		pcall(function()
			StarterGui:SetCoreGuiEnabled(coreType, true)
		end)
	end
	
	-- restaura ScreenGuis
	if hiddenFolder and hiddenFolder.Parent then
		for _, obj in ipairs(hiddenFolder:GetChildren()) do
			pcall(function() obj.Parent = playerGui end)
		end
		pcall(function() hiddenFolder:Destroy() end)
	end
	
	-- remove GUI
	pcall(function()
		if gui and gui.Parent then
			gui:Destroy()
		end
	end)
end

-- expõe funções globalmente
getgenv().MkzCleanup = restoreAll
getgenv().MkzSetProgress = setProgress

print(("MkzLoad: Ativo! ParentedToCore=%s | Use getgenv().MkzSetProgress(valor) para controlar manualmente"):format(tostring(parentedToCore)))
print("Use getgenv().MkzCleanup() para fechar a tela de loading")
